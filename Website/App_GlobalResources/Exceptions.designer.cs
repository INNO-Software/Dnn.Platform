//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Exceptions", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension &apos;{0}&apos; is not allowed. The file has not been added..
        /// </summary>
        internal static string AddFileExtensionNotAllowed_Text {
            get {
                return ResourceManager.GetString("AddFileExtensionNotAllowed.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website has no space available to store the specified file. The file has not been added..
        /// </summary>
        internal static string AddFileNoSpaceAvailable_Text {
            get {
                return ResourceManager.GetString("AddFileNoSpaceAvailable.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions are not met. The file has not been added..
        /// </summary>
        internal static string AddFilePermissionsNotMet_Text {
            get {
                return ResourceManager.GetString("AddFilePermissionsNotMet.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The file has not been added..
        /// </summary>
        internal static string AddFileUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("AddFileUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided folder path already exists. The folder has not been added..
        /// </summary>
        internal static string AddFolderAlreadyExists_Text {
            get {
                return ResourceManager.GetString("AddFolderAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent folder cannot be found..
        /// </summary>
        internal static string AddFolderParentCannotBeFound_Text {
            get {
                return ResourceManager.GetString("AddFolderParentCannotBeFound.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The folder has not been added..
        /// </summary>
        internal static string AddFolderUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("AddFolderUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple types were found that match the controller named &apos;{0}&apos; in namespaces {1}..
        /// </summary>
        internal static string AmbiguousController_Text {
            get {
                return ResourceManager.GetString("AmbiguousController.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; cannot be null or empty..
        /// </summary>
        internal static string ArgumentCannotBeNullOrEmpty_Text {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrEmpty.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder &apos;{0}&apos; cannot be moved. A folder with that name already exists under the folder &apos;{1}&apos;..
        /// </summary>
        internal static string CannotMoveFolderAlreadyExists_Text {
            get {
                return ResourceManager.GetString("CannotMoveFolderAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder with name &apos;{0}&apos; cannot be moved. Move Folder operation between this two folder types is not allowed.
        /// </summary>
        internal static string CannotMoveFolderBetweenFolderType_Text {
            get {
                return ResourceManager.GetString("CannotMoveFolderBetweenFolderType.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate a controller for {0}.  Searched in namespaces: {1}..
        /// </summary>
        internal static string ControllerNotFound_Text {
            get {
                return ResourceManager.GetString("ControllerNotFound.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website has no space available to store the specified file. The file has not been copied..
        /// </summary>
        internal static string CopyFileNoSpaceAvailable_Text {
            get {
                return ResourceManager.GetString("CopyFileNoSpaceAvailable.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions are not met. The file has not been copied..
        /// </summary>
        internal static string CopyFilePermissionsNotMet_Text {
            get {
                return ResourceManager.GetString("CopyFilePermissionsNotMet.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system throw an exception. The file has not been copied..
        /// </summary>
        internal static string CopyFileUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("CopyFileUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The file has not been deleted..
        /// </summary>
        internal static string DeleteFileUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("DeleteFileUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The folder has not been deleted..
        /// </summary>
        internal static string DeleteFolderUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("DeleteFolderUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Creating BusinessControllerClass &apos;{0}&apos; of module({1}) id=({2}) in tab({3}) and portal({4}).
        /// </summary>
        internal static string ErrorCreatingBusinessControllerClass_Text {
            get {
                return ResourceManager.GetString("ErrorCreatingBusinessControllerClass.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File locked. The file cannot be updated because it is not within a valid start and end date for publication..
        /// </summary>
        internal static string FileLockedOutOfPublishPeriodError_Text {
            get {
                return ResourceManager.GetString("FileLockedOutOfPublishPeriodError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File locked. The file cannot be updated because it is currently part of a workflow..
        /// </summary>
        internal static string FileLockedRunningWorkflowError_Text {
            get {
                return ResourceManager.GetString("FileLockedRunningWorkflowError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified name ({0}) is not valid.
        /// </summary>
        internal static string FileNameInvalid_Text {
            get {
                return ResourceManager.GetString("FileNameInvalid.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create folder ({0}), folder already exists in this location.
        /// </summary>
        internal static string FolderAlreadyExists_Text {
            get {
                return ResourceManager.GetString("FolderAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder does not exist.
        /// </summary>
        internal static string FolderDoesNotExists_Text {
            get {
                return ResourceManager.GetString("FolderDoesNotExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name contains invalid character(s). Please specify a name without {0}.
        /// </summary>
        internal static string FolderFileNameHasInvalidcharacters_Text {
            get {
                return ResourceManager.GetString("FolderFileNameHasInvalidcharacters.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is reserved. Try a different name.
        /// </summary>
        internal static string FolderFileNameIsReserved_Text {
            get {
                return ResourceManager.GetString("FolderFileNameIsReserved.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} Installed failed because &apos;{1}&apos;..
        /// </summary>
        internal static string InstallPackageError_Text {
            get {
                return ResourceManager.GetString("InstallPackageError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class &apos;{0}&apos; cannot be created because it&apos;s invalid or is not an analyzer, will use default analyzer..
        /// </summary>
        internal static string InvalidAnalyzerClass_Text {
            get {
                return ResourceManager.GetString("InvalidAnalyzerClass.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Mapped Path is invalid.
        /// </summary>
        internal static string InvalidMappedPath_Text {
            get {
                return ResourceManager.GetString("InvalidMappedPath.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The End Date must be after the Start Date.
        /// </summary>
        internal static string InvalidPublishPeriod_Text {
            get {
                return ResourceManager.GetString("InvalidPublishPeriod.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file specified is not a zip compressed file..
        /// </summary>
        internal static string InvalidZipFile_Text {
            get {
                return ResourceManager.GetString("InvalidZipFile.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LuceneController is disposed and cannot be used anymore.
        /// </summary>
        internal static string LuceneControllerIsDisposed_Text {
            get {
                return ResourceManager.GetString("LuceneControllerIsDisposed.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum length of the Field {0} has been exceeded.
        /// </summary>
        internal static string MaxLengthExceeded_Text {
            get {
                return ResourceManager.GetString("MaxLengthExceeded.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModuleDefId must be greater than zero when SearchTypeId is for a module.
        /// </summary>
        internal static string ModuleDefIdMustBeGreaterThanZero_Text {
            get {
                return ResourceManager.GetString("ModuleDefIdMustBeGreaterThanZero.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModuleDefId is needed only when SearchTypeId is for a module.
        /// </summary>
        internal static string ModuleDefIdWhenSearchTypeForModule_Text {
            get {
                return ResourceManager.GetString("ModuleDefIdWhenSearchTypeForModule.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module does not belong to the page. Please, move to its master page to change the module.
        /// </summary>
        internal static string ModuleDoesNotBelongToPage_Text {
            get {
                return ResourceManager.GetString("ModuleDoesNotBelongToPage.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModuleId must be greater than zero when SearchTypeId is for a module.
        /// </summary>
        internal static string ModuleIdMustBeGreaterThanZero_Text {
            get {
                return ResourceManager.GetString("ModuleIdMustBeGreaterThanZero.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModuleId based search must have SearchTypeId for a module only.
        /// </summary>
        internal static string ModuleIdMustHaveSearchTypeIdForModule_Text {
            get {
                return ResourceManager.GetString("ModuleIdMustHaveSearchTypeIdForModule.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModuleId is needed only when SearchTypeId is for a module.
        /// </summary>
        internal static string ModuleIdWhenSearchTypeForModule_Text {
            get {
                return ResourceManager.GetString("ModuleIdWhenSearchTypeForModule.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be completed..
        /// </summary>
        internal static string MoveFolderCannotComplete_Text {
            get {
                return ResourceManager.GetString("MoveFolderCannotComplete.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The move operation cannot be completed. A manual folder synchronization may be necessary..
        /// </summary>
        internal static string MoveFolderUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("MoveFolderUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attachments are not allowed..
        /// </summary>
        internal static string MsgAttachmentsNotAllowed_Text {
            get {
                return ResourceManager.GetString("MsgAttachmentsNotAllowed.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body cannot be null or empty..
        /// </summary>
        internal static string MsgBodyRequiredError_Text {
            get {
                return ResourceManager.GetString("MsgBodyRequiredError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty To List found while analyzing User and Roles List..
        /// </summary>
        internal static string MsgEmptyToListFoundError_Text {
            get {
                return ResourceManager.GetString("MsgEmptyToListFoundError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either Message is not found or Recipient is not present for the Message..
        /// </summary>
        internal static string MsgMessageOrRecipientNotFound_Text {
            get {
                return ResourceManager.GetString("MsgMessageOrRecipientNotFound.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message object supplied cannot be null..
        /// </summary>
        internal static string MsgMessageRequiredError_Text {
            get {
                return ResourceManager.GetString("MsgMessageRequiredError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only SuperUsers, Site Administrators or Users in the Group can send message to Role..
        /// </summary>
        internal static string MsgOnlyHostOrAdminOrUserInGroupCanSendToRoleError_Text {
            get {
                return ResourceManager.GetString("MsgOnlyHostOrAdminOrUserInGroupCanSendToRoleError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Recipient Limit Reached. To send the message, please remove some recipients from the To List..
        /// </summary>
        internal static string MsgRecipientLimitExceeded_Text {
            get {
                return ResourceManager.GetString("MsgRecipientLimitExceeded.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Roles and Users cannot be null or empty-lists..
        /// </summary>
        internal static string MsgRolesOrUsersRequiredError_Text {
            get {
                return ResourceManager.GetString("MsgRolesOrUsersRequiredError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either Sender is null or Sender.UserID is negative..
        /// </summary>
        internal static string MsgSenderRequiredError_Text {
            get {
                return ResourceManager.GetString("MsgSenderRequiredError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Subject and Body cannot be null or empty..
        /// </summary>
        internal static string MsgSubjectOrBodyRequiredError_Text {
            get {
                return ResourceManager.GetString("MsgSubjectOrBodyRequiredError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject supplied is too big. Maximum {0}, Actual {1}..
        /// </summary>
        internal static string MsgSubjectTooBigError_Text {
            get {
                return ResourceManager.GetString("MsgSubjectTooBigError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message cannot be sent at this time, as the site administrator requires a minimum of {0} minute(s) between messages from the same user..
        /// </summary>
        internal static string MsgThrottlingIntervalNotMet_Text {
            get {
                return ResourceManager.GetString("MsgThrottlingIntervalNotMet.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To List supplied is too big. Maximum {0}, Actual {1}..
        /// </summary>
        internal static string MsgToListTooBigError_Text {
            get {
                return ResourceManager.GetString("MsgToListTooBigError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network connectivity is needed but there is no network available..
        /// </summary>
        internal static string NoNetworkAvailableError_Text {
            get {
                return ResourceManager.GetString("NoNetworkAvailableError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users doesn&apos;t allow send message to other user/group in current message settings..
        /// </summary>
        internal static string PrivateMessageDisabledError_Text {
            get {
                return ResourceManager.GetString("PrivateMessageDisabledError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error updating the Profile URL.  If you continue to see this message, please check with the site administrator..
        /// </summary>
        internal static string ProfileService_UpdateVanityUrl_Error {
            get {
                return ResourceManager.GetString("ProfileService_UpdateVanityUrl.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{1}&apos; in object &apos;{0}&apos; cannot be negative..
        /// </summary>
        internal static string PropertyCannotBeNegative_Text {
            get {
                return ResourceManager.GetString("PropertyCannotBeNegative.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{1}&apos; in object &apos;{0}&apos; cannot be null or empty..
        /// </summary>
        internal static string PropertyCannotBeNullOrEmpty_Text {
            get {
                return ResourceManager.GetString("PropertyCannotBeNullOrEmpty.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{1}&apos; in object &apos;{0}&apos; cannot be null..
        /// </summary>
        internal static string PropertyCannotBeNull_Text {
            get {
                return ResourceManager.GetString("PropertyCannotBeNull.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions are not met. The page has not been published..
        /// </summary>
        internal static string PublishPagePermissionsNotMet {
            get {
                return ResourceManager.GetString("PublishPagePermissionsNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This folder already contains a file with the same name. The file has not been renamed..
        /// </summary>
        internal static string RenameFileAlreadyExists_Text {
            get {
                return ResourceManager.GetString("RenameFileAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The file has not been renamed..
        /// </summary>
        internal static string RenameFileUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("RenameFileUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination folder already exists. The folder has not been renamed..
        /// </summary>
        internal static string RenameFolderAlreadyExists_Text {
            get {
                return ResourceManager.GetString("RenameFolderAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception. The folder has not been renamed..
        /// </summary>
        internal static string RenameFolderUnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("RenameFolderUnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Analyzer: min word length ({0}) is greater than max word length ({1}) value.
        /// </summary>
        internal static string SearchAnalyzerMinWordLength_Text {
            get {
                return ResourceManager.GetString("SearchAnalyzerMinWordLength.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search indexing directory is either empty or does not exist.
        /// </summary>
        internal static string SearchIndexingDirectoryNoValid_Text {
            get {
                return ResourceManager.GetString("SearchIndexingDirectoryNoValid.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL sitemap provider &apos;{0}&apos; failed with error: {1}.
        /// </summary>
        internal static string SitemapProviderError_Text {
            get {
                return ResourceManager.GetString("SitemapProviderError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL sitemap generation for page &apos;{0} - {1}&apos; caused an exception: {2}.
        /// </summary>
        internal static string SitemapUrlGenerationError_Text {
            get {
                return ResourceManager.GetString("SitemapUrlGenerationError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Start Date must not be in the past.
        /// </summary>
        internal static string StartDateMustNotBeInThePast_Text {
            get {
                return ResourceManager.GetString("StartDateMustNotBeInThePast.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Start Date is required.
        /// </summary>
        internal static string StartDateRequired_Text {
            get {
                return ResourceManager.GetString("StartDateRequired.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System workflow cannot be deleted.
        /// </summary>
        internal static string SystemWorkflowDeletionException_Text {
            get {
                return ResourceManager.GetString("SystemWorkflowDeletionException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tha tab {0} has not an unpublished version.
        /// </summary>
        internal static string TabHasNotAnUnpublishedVersion_Text {
            get {
                return ResourceManager.GetString("TabHasNotAnUnpublishedVersion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified Module Instance does not exist..
        /// </summary>
        internal static string TabModuleNotExist_Text {
            get {
                return ResourceManager.GetString("TabModuleNotExist.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified Page is not in this Site..
        /// </summary>
        internal static string TabNotInPortal_Text {
            get {
                return ResourceManager.GetString("TabNotInPortal.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the version {1} is already published.
        /// </summary>
        internal static string TabVersionAlreadyPublished_Text {
            get {
                return ResourceManager.GetString("TabVersionAlreadyPublished.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the new unpublished version cannot be created since another unpublished version exists. Maybe another user has taken action on the page and its state has been changed. Please, refresh the page to see the current state..
        /// </summary>
        internal static string TabVersionCannotBeCreated_UnpublishedVersionAlreadyExistsConcurrencyProblem_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeCreated_UnpublishedVersionAlreadyExistsConcurrencyProblem.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the new unpublished version cannot be created since another unpublished version exists..
        /// </summary>
        internal static string TabVersionCannotBeCreated_UnpublishedVersionAlreadyExists_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeCreated_UnpublishedVersionAlreadyExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the version {1} cannot be deleted because it is an unpublished version.
        /// </summary>
        internal static string TabVersionCannotBeDeleted_UnpublishedVersion_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeDeleted_UnpublishedVersion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tab {0} has only one version created. It cannot be discarded.
        /// </summary>
        internal static string TabVersionCannotBeDiscarded_OnlyOneVersion_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeDiscarded_OnlyOneVersion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the version {1} cannot be rolled back as is the last version.
        /// </summary>
        internal static string TabVersionCannotBeRolledBack_LastVersion_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeRolledBack_LastVersion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Tab {0}, the version {1} cannot be rolled back because an unpublished version exists.
        /// </summary>
        internal static string TabVersionCannotBeRolledBack_UnpublishedVersionExists_Text {
            get {
                return ResourceManager.GetString("TabVersionCannotBeRolledBack_UnpublishedVersionExists.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tab Versioning is not enabled.
        /// </summary>
        internal static string TabVersioningNotEnabled_Text {
            get {
                return ResourceManager.GetString("TabVersioningNotEnabled.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create Lucene writer (lock file is in use). Please recycle AppPool in IIS to release lock..
        /// </summary>
        internal static string UnableToCreateLuceneWriter_Text {
            get {
                return ResourceManager.GetString("UnableToCreateLuceneWriter.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying system threw an exception..
        /// </summary>
        internal static string UnderlyingSystemError_Text {
            get {
                return ResourceManager.GetString("UnderlyingSystemError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cannot review the workflow state.
        /// </summary>
        internal static string UserCannotReviewWorkflowState_Text {
            get {
                return ResourceManager.GetString("UserCannotReviewWorkflowState.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user has no permission to add folders on this location.
        /// </summary>
        internal static string UserHasNoPermissionToAdd_Text {
            get {
                return ResourceManager.GetString("UserHasNoPermissionToAdd.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user has no permission to browse this folder.
        /// </summary>
        internal static string UserHasNoPermissionToBrowseFolder_Text {
            get {
                return ResourceManager.GetString("UserHasNoPermissionToBrowseFolder.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user has no permission to edit this file.
        /// </summary>
        internal static string UserHasNoPermissionToEditFile_Text {
            get {
                return ResourceManager.GetString("UserHasNoPermissionToEditFile.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user has no permission to edit this folder.
        /// </summary>
        internal static string UserHasNoPermissionToEditFolder_Text {
            get {
                return ResourceManager.GetString("UserHasNoPermissionToEditFolder.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target User &apos;{0}&apos; has Blocked Relationship &apos;{1}&apos; from Target User &apos;{2}&apos;..
        /// </summary>
        internal static string UserRelationshipBlockedError_Text {
            get {
                return ResourceManager.GetString("UserRelationshipBlockedError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserRelationshipID &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string UserRelationshipDoesNotExistError_Text {
            get {
                return ResourceManager.GetString("UserRelationshipDoesNotExistError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship already exists for Initiating User &apos;{0}&apos; Target User &apos;{1}&apos; RelationshipID &apos;{2}&apos;..
        /// </summary>
        internal static string UserRelationshipExistsError_Text {
            get {
                return ResourceManager.GetString("UserRelationshipExistsError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website ID &apos;{0}&apos; of Initiating User is different from Website ID &apos;{1}&apos; of Target  User..
        /// </summary>
        internal static string UserRelationshipForDifferentPortalError_Text {
            get {
                return ResourceManager.GetString("UserRelationshipForDifferentPortalError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initiating and Target Users cannot have same UserID &apos;{0}&apos;..
        /// </summary>
        internal static string UserRelationshipForSameUsersError_Text {
            get {
                return ResourceManager.GetString("UserRelationshipForSameUsersError.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; cannot be negative..
        /// </summary>
        internal static string ValueCannotBeNegative_Text {
            get {
                return ResourceManager.GetString("ValueCannotBeNegative.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; must be of type &apos;{1}&apos;..
        /// </summary>
        internal static string ValueMustBeOfType_Text {
            get {
                return ResourceManager.GetString("ValueMustBeOfType.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow cannot get started for this Content Item. It already has a started workflow..
        /// </summary>
        internal static string WorkflowAlreadyStarted_Text {
            get {
                return ResourceManager.GetString("WorkflowAlreadyStarted.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author cannot be found. Notification won&apos;t be sent.
        /// </summary>
        internal static string WorkflowAuthorNotFound_Text {
            get {
                return ResourceManager.GetString("WorkflowAuthorNotFound.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot discard on last workflow state.
        /// </summary>
        internal static string WorkflowCannotDiscard_Text {
            get {
                return ResourceManager.GetString("WorkflowCannotDiscard.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current state of the workflow is not the same of the current state specified in the input parameter.
        /// </summary>
        internal static string WorkflowConcurrencyException_Text {
            get {
                return ResourceManager.GetString("WorkflowConcurrencyException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow does not exist.
        /// </summary>
        internal static string WorkflowDoesNotExistException_Text {
            get {
                return ResourceManager.GetString("WorkflowDoesNotExistException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot delete a workflow in use.
        /// </summary>
        internal static string WorkflowInUsageException_Text {
            get {
                return ResourceManager.GetString("WorkflowInUsageException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A workflow with this name already exists.
        /// </summary>
        internal static string WorkflowNameAlreadyExistsException_Text {
            get {
                return ResourceManager.GetString("WorkflowNameAlreadyExistsException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New states cannot be added to system workflows.
        /// </summary>
        internal static string WorkflowNewStateCannotBeAddedToSystemWorkflows_Text {
            get {
                return ResourceManager.GetString("WorkflowNewStateCannotBeAddedToSystemWorkflows.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow state cannot be moved.
        /// </summary>
        internal static string WorkflowStateCannotBeMoved_Text {
            get {
                return ResourceManager.GetString("WorkflowStateCannotBeMoved.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot delete a state in use.
        /// </summary>
        internal static string WorkflowStateInUsageException_Text {
            get {
                return ResourceManager.GetString("WorkflowStateInUsageException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A workflow state with this name already exists.
        /// </summary>
        internal static string WorkflowStateNameAlreadyExistsException_Text {
            get {
                return ResourceManager.GetString("WorkflowStateNameAlreadyExistsException.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System workflow state cannot be deleted.
        /// </summary>
        internal static string WorkflowSystemWorkflowStateCannotBeDeleted_Text {
            get {
                return ResourceManager.GetString("WorkflowSystemWorkflowStateCannotBeDeleted.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System workflow state cannot be completed..
        /// </summary>
        internal static string WorkflowSystemWorkflowStateCannotComplete_Text {
            get {
                return ResourceManager.GetString("WorkflowSystemWorkflowStateCannotComplete.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions are not met. The file cannot be downloaded..
        /// </summary>
        internal static string WriteFileToResponsePermissionsNotMet_Text {
            get {
                return ResourceManager.GetString("WriteFileToResponsePermissionsNotMet.Text", resourceCulture);
            }
        }
    }
}
